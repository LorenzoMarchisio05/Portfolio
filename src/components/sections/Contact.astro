---
import { motion } from "motion/react";
import StaggeredText from "../components/StaggeredText.astro";
---

<section
  id="contact"
  class="w-screen grid grid-cols-2 relative perspective-midrange px-20 py-16"
>
  <div class="col flex flex-col justify-center space-y-8 py-24 px-10">
    <div>
      <h2
        class="text-7xl font-bold tracking-tighter bg-gradient-to-r from-gray-900 via-gray-700 to-gray-900 bg-clip-text text-transparent"
      >
        <StaggeredText text="Get in Touch" duration={0.5} />
      </h2>
      <h3
        class="text-3xl font-semibold bg-gradient-to-l from-5% from-gray-900 to-red-700 bg-clip-text text-transparent mt-8"
      >
        <StaggeredText
          text="Let's Create Something Amazing Together"
          duration={0.2}
          delay={0.1}
        />
      </h3>
    </div>
    <div class="space-y-8">
      <p class="text-xl text-gray-700 max-w-2xl leading-relaxed">
        Have a project in mind or want to discuss potential collaborations? I'm
        always excited to connect with fellow creators and innovators.
      </p>
      <div class="flex space-x-4">
        <a
          href="mailto:me@lorenzomarchisio.dev?subject=Portfolio%20Contact%20Request"
          target="_blank"
          rel="noopener noreferrer"
          class="p-3 rounded-lg bg-white shadow-md"
        >
          <svg
            class="w-6 h-6 text-gray-700"
            fill="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              d="M20 4H4c-1.103 0-2 .897-2 2v12c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V6c0-1.103-.897-2-2-2zm0 2v.511l-8 6.223-8-6.222V6h16zM4 18V9.044l7.386 5.745a.994.994 0 0 0 1.228 0L20 9.044 20.002 18H4z"
            ></path>
          </svg>
        </a>
        <a
          href="https://linkedin.com/in/lorenzomarchisio"
          target="_blank"
          rel="noopener noreferrer"
          class="p-3 rounded-lg bg-white shadow-md"
        >
          <svg
            class="w-6 h-6 text-gray-700"
            fill="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"
            ></path>
          </svg>
        </a>
        <a
          href="https://github.com/lorenzomarchisio05"
          target="_blank"
          rel="noopener noreferrer"
          class="p-3 rounded-lg bg-white shadow-md"
        >
          <svg
            class="w-6 h-6 text-gray-700"
            fill="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
            ></path>
          </svg>
        </a>
      </div>
    </div>
  </div>
  <div class="col py-20 flex items-center justify-center">
    <motion.div
      client:load
      initial={{ opacity: 0, y: -10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.45, delay: 0.1 }}
      className="w-4/5 p-8 rounded-xl bg-white shadow-2xl border border-gray-200"
    >
      <form class="space-y-6" id="contact-form">
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700">Name</label>
          <input
            type="text"
            name="name"
            required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-transparent transition outline-0"
            placeholder="Your name"
          />
        </div>
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700">Email</label>
          <input
            type="email"
            name="email"
            required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-transparent transition outline-0"
            placeholder="your.email@example.com"
          />
        </div>
        <div class="space-y-2">
          <label class="block text-sm font-medium text-gray-700">Message</label>
          <textarea
            name="message"
            required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-transparent transition h-32 outline-0"
            placeholder="Your message"></textarea>
        </div>
        <button
          type="submit"
          class="w-full py-3 px-6 text-white font-medium rounded-lg bg-gradient-to-r from-red-900 to-red-700 hover:from-red-800 hover:to-red-600 transition shadow-md"
        >
          Send Message
        </button>
      </form>
    </motion.div>
  </div>
</section>

<script>
  interface FormData {
    name: string;
    email: string;
    message: string;
  }

  const handleSubmit = async (formData: FormData) => {
    try {
      const response = await fetch("/api/send-email", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(formData),
      });
      const data = await response.json();
      return { success: response.ok, message: data.message };
    } catch (error) {
      return {
        success: false,
        message: "Failed to send message. Please try again.",
      };
    }
  };

  const onSubmit = async (e: Event) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    const data = {
      name: formData.get("name") as string,
      email: formData.get("email") as string,
      message: formData.get("message") as string,
    };

    const submitButton = form.querySelector(
      'button[type="submit"]'
    ) as HTMLButtonElement;
    const originalText = submitButton.innerHTML;
    submitButton.disabled = true;
    submitButton.innerHTML = "Sending...";

    const result = await handleSubmit(data);

    submitButton.innerHTML = result.success ? "Sent!" : "Failed!";
    submitButton.className = `w-full py-3 px-6 text-white font-medium rounded-lg transition shadow-md ${
      result.success
        ? "bg-gradient-to-r from-green-700 to-green-600 hover:from-green-600 hover:to-green-500"
        : "bg-gradient-to-r from-red-700 to-red-600 hover:from-red-600 hover:to-red-500"
    }`;

    if (result.success) {
      form.reset();
      setTimeout(() => {
        submitButton.disabled = false;
        submitButton.innerHTML = originalText;
        submitButton.className =
          "w-full py-3 px-6 text-white font-medium rounded-lg bg-gradient-to-r from-red-900 to-red-700 hover:from-red-800 hover:to-red-600 transition shadow-md";
      }, 2000);
    } else {
      setTimeout(() => {
        submitButton.disabled = false;
        submitButton.innerHTML = originalText;
        submitButton.className =
          "w-full py-3 px-6 text-white font-medium rounded-lg bg-gradient-to-r from-red-900 to-red-700 hover:from-red-800 hover:to-red-600 transition shadow-md";
      }, 2000);
    }
  };

  document.getElementById("contact-form")!.addEventListener("submit", onSubmit);
</script>
